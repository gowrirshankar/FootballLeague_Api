// <auto-generated />
using Database.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Database.Migrations
{
    [DbContext(typeof(FootballDbContext))]
    [Migration("20210416170418_Seeding Data - Team")]
    partial class SeedingDataTeam
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Database.Model.PlayedMatch", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Draw")
                        .HasColumnType("int");

                    b.Property<int>("Lost")
                        .HasColumnType("int");

                    b.Property<int>("MatchesPlayed")
                        .HasColumnType("int");

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.Property<int>("Won")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("TeamId");

                    b.ToTable("tbl_MatchesPlayed");
                });

            modelBuilder.Entity("Database.Model.Team", b =>
                {
                    b.Property<int>("TeamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TeamCode")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("TeamName")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.HasKey("TeamId");

                    b.ToTable("tbl_Team");

                    b.HasData(
                        new
                        {
                            TeamId = 1,
                            TeamCode = "Ger",
                            TeamName = "Germany"
                        },
                        new
                        {
                            TeamId = 2,
                            TeamCode = "Bra",
                            TeamName = "Brazil"
                        },
                        new
                        {
                            TeamId = 3,
                            TeamCode = "Swe",
                            TeamName = "Sweden"
                        },
                        new
                        {
                            TeamId = 4,
                            TeamCode = "Por",
                            TeamName = "Portugal"
                        },
                        new
                        {
                            TeamId = 5,
                            TeamCode = "Ind",
                            TeamName = "India"
                        });
                });

            modelBuilder.Entity("Database.Model.PlayedMatch", b =>
                {
                    b.HasOne("Database.Model.Team", null)
                        .WithMany("PlayedMatches")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Database.Model.Team", b =>
                {
                    b.Navigation("PlayedMatches");
                });
#pragma warning restore 612, 618
        }
    }
}
